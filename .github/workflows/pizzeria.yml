name: Simulation Pizzeria

on:
  workflow_dispatch:
    inputs:
      nom_client:
        description: "Nom du client"
        required: true
      pizzas:
        description: |
          Liste des pizzas au format JSON. Attention aux points importants:
          - Utilisez des guillemets doubles
          - Entourez la liste avec []
          Exemple: ["margherita","reine","calzone"]
        required: true

jobs:
  reception-commande:
    runs-on: ubuntu-latest
    outputs:
      pizzas: ${{ steps.set-pizzas.outputs.pizzas }}
    steps:
      - name: Message d'accueil
        run: echo "Bienvenue ${{ github.event.inputs.nom_client }} chez PizzaCI Express !"

      - name: Confirmation de commande
        run: echo "Commandes reçues : ${{ github.event.inputs.pizzas }}"

      - name: Transfert des pizzas
        id: set-pizzas
        run: |
          pizzas="${{ github.event.inputs.pizzas }}"
          echo "pizzas=$pizzas" >> $GITHUB_OUTPUT

  cuisine:
    needs: reception-commande
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pizza: ${{ fromJSON(needs.reception-commande.outputs.pizzas) }}
        taille: [L, XL]
    steps:
      - name: Préparation pizza
        run: echo "Préparation de la pizza ${{ matrix.pizza }} en taille ${{ matrix.taille }}"

  pizza-dessert:
    needs: reception-commande
    runs-on: ubuntu-latest
    steps:
      - name: Préparation dessert
        run: echo "Préparation de la pizza dessert en taille L"

  livraison:
    needs: [cuisine, pizza-dessert]
    runs-on: ubuntu-latest
    concurrency:
      group: livraison-unique
      cancel-in-progress: true
    steps:
      - name: Préparation livraison
        run: echo "Livraison en cours pour ${{ github.event.inputs.nom_client }}"

      - name: Liste des pizzas livrées
        run: echo "Pizzas livrées : ${{ needs.reception-commande.outputs.pizzas }}"

  reclamation:
    needs: livraison
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Créer une issue de réclamation
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create --title "Réclamation client ${{ github.event.inputs.nom_client }}" --body "Le client signale une erreur sur la commande : ${{ github.event.inputs.pizzas }}"
